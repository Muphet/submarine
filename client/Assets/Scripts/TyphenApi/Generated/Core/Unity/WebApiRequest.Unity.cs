// This file was generated by typhen-api

using UnityEngine;
using System;
using System.Collections;

namespace TyphenApi
{
    public partial class WebApiRequest<ResponseT, ErrorT>
        where ResponseT : TypeBase, new()
        where ErrorT : TypeBase, new()
    {
        public Coroutine Send(Func<IEnumerator, Coroutine> startCorotineFunc,
            Action<WebApiResponse<ResponseT>> onSuccess,
            Action<WebApiError<ErrorT>> onError = null,
            int retryCount = 0)
        {
            return startCorotineFunc(SendAsync(startCorotineFunc, onSuccess, onError, retryCount));
        }

        IEnumerator SendAsync(Func<IEnumerator, Coroutine> startCorotineFunc,
            Action<WebApiResponse<ResponseT>> onSuccess,
            Action<WebApiError<ErrorT>> onError = null,
            int retryCount = 0)
        {
            yield return startCorotineFunc(SendAsync());
            var sentCount = 1;

            while (Error != null && sentCount < retryCount + 1)
            {
                yield return startCorotineFunc(SendAsync());
                sentCount += 1;
            }

            if (Error == null)
            {
                if (onSuccess != null)
                {
                    onSuccess(Response);
                }
            }
            else
            {
                if (onError != null)
                {
                    onError(Error);
                }
            }
        }
    }
}
