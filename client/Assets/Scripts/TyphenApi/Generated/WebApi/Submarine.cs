// This file was generated by typhen-api

using System;
using System.Collections.Generic;

namespace TyphenApi.WebApi.Base
{
    public abstract class Submarine : TyphenApi.WebApiBase<TyphenApi.Type.Submarine.Error>
    {

        protected Submarine(string baseUri) : base(baseUri)
        {
        }

        class PingRequestBody : TyphenApi.TypeBase<PingRequestBody>
        {
            protected static readonly SerializationInfo<PingRequestBody, string> message = new SerializationInfo<PingRequestBody, string>("message", false, (x) => x.Message, (x, v) => x.Message = v);
            public string Message { get; set; }
        }

        public TyphenApi.WebApiRequest<TyphenApi.Type.Submarine.PingObject, TyphenApi.Type.Submarine.Error> Ping(string message)
        {
            var requestBody = new PingRequestBody();
            requestBody.Message = message;

            var request = new TyphenApi.WebApiRequest<TyphenApi.Type.Submarine.PingObject, TyphenApi.Type.Submarine.Error>(this);
            request.Uri = new Uri(BaseUri, "ping");
            request.Method = HttpMethod.Post;
            request.Body = requestBody;
            request.NoAuthenticationRequired = true;
            return request;
        }

        class SignUpRequestBody : TyphenApi.TypeBase<SignUpRequestBody>
        {
        }

        public TyphenApi.WebApiRequest<TyphenApi.Type.Submarine.SignUpObject, TyphenApi.Type.Submarine.Error> SignUp()
        {
            var requestBody = new SignUpRequestBody();

            var request = new TyphenApi.WebApiRequest<TyphenApi.Type.Submarine.SignUpObject, TyphenApi.Type.Submarine.Error>(this);
            request.Uri = new Uri(BaseUri, "sign_up");
            request.Method = HttpMethod.Post;
            request.Body = requestBody;
            request.NoAuthenticationRequired = true;
            return request;
        }

        class LoginRequestBody : TyphenApi.TypeBase<LoginRequestBody>
        {
            protected static readonly SerializationInfo<LoginRequestBody, string> authToken = new SerializationInfo<LoginRequestBody, string>("auth_token", false, (x) => x.AuthToken, (x, v) => x.AuthToken = v);
            public string AuthToken { get; set; }
        }

        public TyphenApi.WebApiRequest<TyphenApi.Type.Submarine.LoginObject, TyphenApi.Type.Submarine.Error> Login(string auth_token)
        {
            var requestBody = new LoginRequestBody();
            requestBody.AuthToken = auth_token;

            var request = new TyphenApi.WebApiRequest<TyphenApi.Type.Submarine.LoginObject, TyphenApi.Type.Submarine.Error>(this);
            request.Uri = new Uri(BaseUri, "login");
            request.Method = HttpMethod.Post;
            request.Body = requestBody;
            request.NoAuthenticationRequired = true;
            return request;
        }

        class FindUserRequestBody : TyphenApi.TypeBase<FindUserRequestBody>
        {
            protected static readonly SerializationInfo<FindUserRequestBody, string> name = new SerializationInfo<FindUserRequestBody, string>("name", false, (x) => x.Name, (x, v) => x.Name = v);
            public string Name { get; set; }
        }

        public TyphenApi.WebApiRequest<TyphenApi.Type.Submarine.FindUserObject, TyphenApi.Type.Submarine.Error> FindUser(string name)
        {
            var requestBody = new FindUserRequestBody();
            requestBody.Name = name;

            var request = new TyphenApi.WebApiRequest<TyphenApi.Type.Submarine.FindUserObject, TyphenApi.Type.Submarine.Error>(this);
            request.Uri = new Uri(BaseUri, "find_user");
            request.Method = HttpMethod.Post;
            request.Body = requestBody;
            request.NoAuthenticationRequired = false;
            return request;
        }

        class CreateRoomRequestBody : TyphenApi.TypeBase<CreateRoomRequestBody>
        {
        }

        public TyphenApi.WebApiRequest<TyphenApi.Type.Submarine.CreateRoomObject, TyphenApi.Type.Submarine.Error> CreateRoom()
        {
            var requestBody = new CreateRoomRequestBody();

            var request = new TyphenApi.WebApiRequest<TyphenApi.Type.Submarine.CreateRoomObject, TyphenApi.Type.Submarine.Error>(this);
            request.Uri = new Uri(BaseUri, "create_room");
            request.Method = HttpMethod.Post;
            request.Body = requestBody;
            request.NoAuthenticationRequired = false;
            return request;
        }

        class GetRoomsRequestBody : TyphenApi.TypeBase<GetRoomsRequestBody>
        {
        }

        public TyphenApi.WebApiRequest<TyphenApi.Type.Submarine.GetRoomsObject, TyphenApi.Type.Submarine.Error> GetRooms()
        {
            var requestBody = new GetRoomsRequestBody();

            var request = new TyphenApi.WebApiRequest<TyphenApi.Type.Submarine.GetRoomsObject, TyphenApi.Type.Submarine.Error>(this);
            request.Uri = new Uri(BaseUri, "get_rooms");
            request.Method = HttpMethod.Post;
            request.Body = requestBody;
            request.NoAuthenticationRequired = false;
            return request;
        }

        class JoinIntoRoomRequestBody : TyphenApi.TypeBase<JoinIntoRoomRequestBody>
        {
            protected static readonly SerializationInfo<JoinIntoRoomRequestBody, long> roomId = new SerializationInfo<JoinIntoRoomRequestBody, long>("room_id", false, (x) => x.RoomId, (x, v) => x.RoomId = v);
            public long RoomId { get; set; }
        }

        public TyphenApi.WebApiRequest<TyphenApi.Type.Submarine.JoinIntoRoomObject, TyphenApi.Type.Submarine.Error> JoinIntoRoom(long room_id)
        {
            var requestBody = new JoinIntoRoomRequestBody();
            requestBody.RoomId = room_id;

            var request = new TyphenApi.WebApiRequest<TyphenApi.Type.Submarine.JoinIntoRoomObject, TyphenApi.Type.Submarine.Error>(this);
            request.Uri = new Uri(BaseUri, "join_into_room");
            request.Method = HttpMethod.Post;
            request.Body = requestBody;
            request.NoAuthenticationRequired = false;
            return request;
        }

    }
}
