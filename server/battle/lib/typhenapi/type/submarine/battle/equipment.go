// This file was generated by typhen-api

package battle

import (
	"errors"
	"github.com/shiwano/submarine/server/battle/lib/typhenapi"
)

var _ = errors.New

// Equipment is a kind of TyphenAPI type.
type Equipment struct {
	ActorId  int64            `json:"actor_id" msgpack:"actor_id"`
	Torpedos []*EquipmentItem `json:"torpedos" msgpack:"torpedos"`
	Pinger   *EquipmentItem   `json:"pinger" msgpack:"pinger"`
	Watcher  *EquipmentItem   `json:"watcher" msgpack:"watcher"`
}

// Coerce the fields.
func (t *Equipment) Coerce() error {
	if t.Torpedos == nil {
		return errors.New("Torpedos should not be empty")
	}
	if t.Pinger == nil {
		return errors.New("Pinger should not be empty")
	}
	if t.Watcher == nil {
		return errors.New("Watcher should not be empty")
	}
	return nil
}

// Bytes creates the byte array.
func (t *Equipment) Bytes(serializer typhenapi.Serializer) ([]byte, error) {
	if err := t.Coerce(); err != nil {
		return nil, err
	}

	data, err := serializer.Serialize(t)
	if err != nil {
		return nil, err
	}

	return data, nil
}
