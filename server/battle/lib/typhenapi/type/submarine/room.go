// This file was generated by typhen-api

package submarine

import (
	"errors"
	"github.com/shiwano/submarine/server/battle/lib/typhenapi"
)

var _ = errors.New

// Room is a kind of TyphenAPI type.
type Room struct {
	Id      int64   `json:"id" msgpack:"id"`
	Members []*User `json:"members" msgpack:"members"`
	Bots    []*Bot  `json:"bots" msgpack:"bots"`
}

// Coerce the fields.
func (t *Room) Coerce() error {
	if t.Members == nil {
		return errors.New("Members should not be empty")
	}
	return nil
}

// Bytes creates the byte array.
func (t *Room) Bytes(serializer typhenapi.Serializer) ([]byte, error) {
	if err := t.Coerce(); err != nil {
		return nil, err
	}

	data, err := serializer.Serialize(t)
	if err != nil {
		return nil, err
	}

	return data, nil
}
