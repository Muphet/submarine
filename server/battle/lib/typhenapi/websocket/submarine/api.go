// This file was generated by typhen-api

package submarine

import (
	"github.com/shiwano/submarine/server/battle/lib/typhenapi"
	_submarine_battle "github.com/shiwano/submarine/server/battle/lib/typhenapi/websocket/submarine/battle"
)

// WebSocketAPI sends messages, and dispatches message events.
type WebSocketAPI struct {
	session      typhenapi.Session
	serializer   typhenapi.Serializer
	errorHandler func(error)
	Battle       *_submarine_battle.WebSocketAPI
}

// New creates a WebSocketAPI.
func New(session typhenapi.Session, serializer typhenapi.Serializer, errorHandler func(error)) *WebSocketAPI {
	api := &WebSocketAPI{}
	api.session = session
	api.serializer = serializer
	api.errorHandler = errorHandler
	api.Battle = _submarine_battle.New(session, serializer, errorHandler)
	return api
}

// DispatchMessageEvent dispatches a binary message.
func (api *WebSocketAPI) DispatchMessageEvent(data []byte) error {
	if err := api.Battle.DispatchMessageEvent(data); err != nil {
		return err
	}

	return nil
}
