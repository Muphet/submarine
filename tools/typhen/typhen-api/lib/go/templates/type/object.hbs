// This file was generated by typhen-api

package {{lowerCamelCase parentModule}}

import (
	"errors"
	{{#each (requiredModules this)}}
	{{alias}} "{{@importBasePath}}/type/{{path}}"
	{{/each}}
)

var _ = errors.New;

// {{upperCamelCase name}} is kind of a TyphenAPI type.
type {{upperCamelCase name}} struct {
	{{#each properties}}
	{{upperCamelCase name}} {{typeName type ../parentModule isOptional true}} `codec:"{{serializablePropertyName this}}"`
	{{/each}}
}

// Coerce the fields.
func (t *{{upperCamelCase name}}) Coerce() error {
	{{#each properties}}
	{{#if isOptional}}
	{{#if type.isEnum}}
	if err := t.{{upperCamelCase name}}.Coerce(); err != nil {
		return err
	}
	{{/if}}
	{{else}}
	{{#unless type.isPrimitiveType}}
	if t.{{upperCamelCase name}} == nil {
		return errors.New("{{upperCamelCase name}} should not be empty")
	}
	{{/unless}}
	{{#if type.isEnum}}
	if err := t.{{upperCamelCase name}}.Coerce(); err != nil {
		return err
	}
	{{/if}}
	{{/if}}
	{{/each}}
	return nil
}
{{#if (isRealTimeMessage this)}}

// RealTimeMessageType returns the real time message type.
func (t *{{upperCamelCase name}}) RealTimeMessageType() int32 {
	return {{realTimeMessageType this}}
}
{{/if}}
