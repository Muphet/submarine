# This file was generated by typhen-api

module TyphenApi::Model{{#if namespace}}::{{namespace}}{{/if}}
  class {{upperCamelCase name}} < Virtus::Attribute
    {{#each members}}
    {{upperCamelCase name}} = {{value}}
    {{/each}}

    def self.name_table
      @@name_table ||= {
        {{#each members}}
        {{value}} => '{{upperCamelCase name}}'{{#unless @last}},{{/unless}}
        {{/each}}
      }
    end

    def coerce(value)
      case value
      when Integer
        unless self.class.name_table.has_key?(value)
          raise Virtus::CoercionError.new("#{value} as #{self.class}", self)
        end
        value
      when String
        begin
          self.class.const_get(value.classify, false)
        rescue NameError => e
          raise Virtus::CoercionError.new("#{value} as #{self.class}", self)
        end
      else
        raise Virtus::CoercionError.new("#{value.class.name} as #{self.class}", self)
      end
    end
  end
end
